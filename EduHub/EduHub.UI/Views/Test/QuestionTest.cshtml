@model EduHub.Application.DTOs.Test.PassingTestDTO;
@using EduHub.Domain.Enums;

<div class="start-test-wrapper m-5">
    @{
        int temp = 0;
        int indexCurentQuestio = 0;
    }

    <div class="side-test">
        <div class="timer">
            <div>Timer</div>
        </div>
        <div class="nav-questions">
           
        @for(var i = 0; i < Model?.Questions?.Count(); i++)
        {

            if(Model.Questions.ToArray()[i].Id == Model.CurrentQuestion?.Id)
            {
                 <a class="active-link-question">
                   @(temp =i + 1)
                   @{indexCurentQuestio = i;}
                </a>
            }
            else
            {
                <a class="side-question-nav" 
                asp-controller="Test" asp-action="QuestionTest"
                asp-route-questionId="@Model.Questions.ToArray()[i].Id" 
                asp-route-testId="@Model?.CurrentQuestion?.TestId"
                asp-route-answerId=""> 
                    @(temp =i + 1)
                </a>
            }
        }
        </div>
    </div>
    <div class="content-question">
        <h3>@Model?.CurrentQuestion?.QuestionContent</h3>
        <h6>Points: @Model?.CurrentQuestion?.Points</h6>
        <div class="answers">
            @if (Model?.CurrentQuestion?.Type == QuestionType.OneAnswer)
            {
                <h3>Chose one Answer:</h3>
                <div class="oneAnswer">
                @foreach(var answer in Model?.CurrentQuestion?.Answers)
                {
                    <div class="one">
                         <input type="radio" id="@answer.Content" name="one" value="@answer.Content">
                         <label for="@answer.Content">@answer.Content</label>
                    </div>
                }
                </div>
            }
            @if (Model?.CurrentQuestion?.Type == QuestionType.MultiAnswers)
            {
                <h3>Chose multiple Answers:</h3>
                <div class="multipleAnswers">
                @foreach(var answer in Model?.CurrentQuestion?.Answers)
                {
                   <div class="multi">
                        <input type="checkbox" id="@answer.Content" name="@answer.Content" value="@answer.Content">
                        <label for="@answer.Content">@answer.Content</label>
                   </div>
                }
                </div>
            }
            @if (Model?.CurrentQuestion?.Type == QuestionType.WriteAnswer)
            {
                <h3>Your Answer:</h3>
                <input id="answerWritten" class="rounded width-30vw">
            }
        </div>
        <div class="test-buttons d-flex gap-4">
            @if(Model.Questions.ToArray()[0].Id != Model.CurrentQuestion?.Id)
            {
               <button class="btn btn-primary" asp-controller="Test" asp-action="QuestionTest" asp-route-questionId="@Model.Questions.ToArray()[indexCurentQuestio-1].Id" asp-route-testId="@Model?.CurrentQuestion?.TestId">Back</button>

            }
            @if(Model.Questions.ToArray()[Model.Questions.ToArray().Count()-1].Id != Model.CurrentQuestion?.Id)
            {
                               
                <button class="btn btn-primary" onclick="SentQuestionTest('@Model.Questions.ToArray()[indexCurentQuestio + 1].Id', '@Model?.CurrentQuestion?.TestId', '@Model?.CurrentQuestion?.Id')" >Next</button>

            }
            @if(Model.Questions.ToArray()[Model.Questions.ToArray().Count()-1].Id == Model.CurrentQuestion?.Id)
            {
               <button class="btn btn-success" asp-controller="Test" asp-action="Finish" asp-route-testId="@Model?.CurrentQuestion?.TestId">Finish</button>
            }

        </div>
    </div>
</div>

<script>
    function SentQuestionTest(questionId, testId, currentQuestionId){
        var queryParams = "?questionId=" + questionId;
        queryParams += "&testId=" + testId;
        queryParams += "&questionAnswerId=" + currentQuestionId;
            
            let  answerOneId = document.querySelector('input[type="radio"]:checked')?.value?.toString();
            if(answerOneId){
                 queryParams += "&answerOne=" + answerOneId;
            }
            
            let answerStr = document.getElementById("answerWritten")?.value;
            if(answerStr){
                queryParams += "&answer=" + answerStr;
            }

            let answerMultiCheckboxes = document.querySelectorAll('input[type="checkbox"]:checked');
            if(answerMultiCheckboxes?.length > 0){
                  let answerMultiIds = [];
    
                  answerMultiCheckboxes.forEach(function(checkedBox) {
                        answerMultiIds.push(checkedBox.value);
                  });
                  queryParams += "&answersMulti=" + answerMultiIds;
            }
          
            debugger
        
        window.location.href = "/Test/QuestionTest1" + queryParams;

    }

   
</script>